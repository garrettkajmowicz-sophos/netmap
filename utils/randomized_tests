#!/usr/bin/env bash
################################################################################
# Runs all the tests using randomized values for number of packets, fill
# character and packets length.
################################################################################

if [ "$EUID" -ne "0" ]; then
	echo "This script must be run as root"
	exit 1
fi

which vale-ctl
if [ "$?" != "0" ]; then
	echo "vale-ctl program not not found"
	exit 1
fi

random_num="$((65 + $RANDOM % 58))"
# https://stackoverflow.com/a/10503163
random_fill=$(printf \\$(printf '%03o' $random_num))
# We need to make sure that we can send this number of packets with this length
# at once. At the moment i just put max values which works for the defaults
# number of rings and buffer size.
random_len="$((50 + $RANDOM % 10000))"
random_packet_num="$((1 + $RANDOM % 100))"
# Use and empty string instead of "-q" if you don't want to perform a sequential
# send/receive check
seq_check="-q"

echo "Running tests with"
echo "   number of packets: ${random_packet_num}"
echo "   fill character   : ${random_fill}"
echo "   sequence check   : ${seq_check}"
echo "   packet length    : ${random_len}"
echo ""

# Save current directory and enter the utils/ directory.
pushd $(pwd)
cd $(dirname $0)

# Add the current directory (and build-utils) to the PATH. In this way we can
# easily invoke functional, get_tx_rings_avail_sends and the other executables
# from the test scripts.
PATH="$(pwd)/../build-utils:$(pwd):${PATH}"

source test_lib

netmap_load

for test in tests/*_test ; do
	restart_fd_server
	$test -n $random_packet_num -l $random_len -f $random_fill "$seq_check" 2>/dev/null
	close_fd_server
	if [ $? != 0 ] ; then
		echo "Rerunning the test that just failed with -v"
		# Select verbosity of output after an error occurred:
		#    -v    -> prints error messages
		#    -vv   -> -v, send and receive actions
		#    -vvv  -> -vv and packet building
		#    -vvvv -> -vvv and arguments parsing
		restart_fd_server
		$test -v -n $random_packet_num -l $random_len -f $random_fill "$seq_check"
		close_fd_server
		popd
		exit $?
	fi
done

# Wait for the fd_server to terminate and release its references
sleep 0.5

netmap_unload
popd
